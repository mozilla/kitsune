@use '../config' as c;
@use '../protocol' as p;

// Typography
//
// All global typography styles and utility classes should live in the
// typography.scss file. Whenever possible, use good semantics and these utility
// classes to change type sizes and fonts, and leave typography details out
// of the component-level files.
//
// .inverse - This class provides white text over a darker background
// .alt-heading-font - Apply this to a heading directly, or any parent element
// to apply to all headings within that context.
// .alt-heading-font.inverse - Both classes can be used together.
//
// Markup: ../../../../../../styleguide/styleguide-examples/typography.njk
//
// Weight: 1
//
// Style guide: typography

// The following mixins were taken and edited from
// protocol/css/includes/mixins/_typography.scss.
// Once protocol is caught up, these can be removed
// and the protocol mixins can be used throughout the system.
//
// Consistent font sizes. Avoid sizing text arbitrarily and use this
// set of predefined sizes. Sizes adapt at common breakpoints, and
// there's some redundancy at smaller sizes because we don't want things
// getting too tiny.
// Example usage:
//  .title { @include c.text-display-xl; }
//  .subtitle { @include c.text-display-lg; }
//  .intro { @include c.text-body-lg; }



body {
  color: var(--color-text);
}

h1, h2, h3, h4, h5, h6,
[class*=text-display] {
  font-family: var(--heading-font-family);
  color: var(--color-heading);
  font-weight: bold;

  a, :link {
    text-decoration: none;
    color: var(--color-heading);

    &:hover {
      text-decoration: underline;
    }
  }
}

.color-heading {
  color: var(--color-heading);
}

// Type scale defined in includes/mixins/_typography.scss
h1,
.text-display-xxl {
  @include c.text-display-xxl;
}

h2,
.text-display-xl {
  @include c.text-display-xl;
}

h3,
.text-display-lg {
  @include c.text-display-lg;
}

h4,
.text-display-md {
  @include c.text-display-md;
}

h5, h6, .text-display-sm {
  font-family: var(--base-font-family);
  @include c.text-display-sm;
}

.text-display-xs {
  @include c.text-display-xs;
}


.text-display-xxs {
  @include c.text-display-xxs;
}

.text-display-xxxs {
  @include c.text-display-xxxs;
}


.alt-heading-font {
  --heading-font-family: var(--heading-alt-font-family);
}

.inverse {
  --color-heading: var(--color-inverse);
  --color-link: var(--color-inverse);
  --color-link-visited: var(--color-link-inverse-visited);
  --color-link-active-bg: var(--color-link-inverse-active-bg);
  background-color: var(--color-inverse-bg);
  color: var(--color-inverse);
}

.text-body-lg {
  @include c.text-body-lg();
}

.text-body-md {
  @include c.text-body-md();
}

.text-body-sm {
  @include c.text-body-sm();
}

.text-body-xs {
  @include c.text-body-xs();
}

.page-heading {
  @include c.text-display-xl;
  text-align: center;

  &--logo {
    display: block;
    width: 56px;
    margin: 0 auto 8px;
  }
}

a, :link {
  text-decoration: underline;
  color: var(--color-link);

  &:hover {
    text-decoration: none;
    color: var(--color-link);
  }

  &:active {
    background-color: var(--color-link-active-bg);
  }

  &.secondary-color:hover {
    color: var(--color-secondary);
  }
}

:visited {
  color: var(--color-link-visited);

  &:hover {
    color: var(--color-link-visited);
  }
}

.warning-link {
  color: var(--color-red-08);

  &:hover {
    color: var(--color-red-09);
  }
}

.secondary-color {
  color: var(--color-secondary);
}
